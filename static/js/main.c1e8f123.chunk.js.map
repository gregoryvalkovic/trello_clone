{"version":3,"sources":["list/ListDisplayer.js","EditableText.js","card/CardDisplayer.js","card/Card.js","card/CardController.js","list/List.js","list/ListController.js","App.js","serviceWorker.js","index.js"],"names":["ListDisplayer","id","this","props","lists","map","list","index","key","Button","className","variant","onClick","onAdd","icon","faPlus","React","Component","EditableText","state","isEditing","renderInput","bind","renderDisplay","handleKeyUp","handleChange","toggleEdit","onDoubleClick","type","value","text","onChange","onKeyUp","onBlur","newState","setState","e","target","CardDisplayer","dragEnterHandler","dragLeaveHandler","console","log","listId","srcElement","onDrop","onDragOver","preventDefault","onDragEnter","onDragLeave","dragExitHandler","cards","card","size","Card","hoverListId","deleteCard","dragStartHandler","dragEndHandler","setText","setHoverListId","onDelete","dataTransfer","setData","txt","draggable","onDragStart","onDragEnd","faTimesCircle","CardController","nextId","addCard","dropHandler","getNextId","cardId","array","i","length","splice","setCards","push","listid","getData","List","delete","cardsArray","ListController","addList","deleteList","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1e8f123.chunk.js","sourcesContent":["import React from 'react';\r\nimport './List.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport {Button} from 'react-bootstrap';\r\n\r\n\r\nexport class ListDisplayer extends React.Component {    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ol id=\"list-container\">\r\n                    {this.props.lists.map((list, index) => (\r\n                        <li key={list.props.id}>\r\n                            {list}\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n                <Button \r\n                    className=\"add-list-button\"\r\n                    variant=\"outline-dark\"\r\n                    onClick={this.props.onAdd}>\r\n                \r\n                    <FontAwesomeIcon icon={faPlus}/>Add a list \r\n                </Button>\r\n            </div>\r\n        ); \r\n    }\r\n}","import React from 'react';\r\n\r\nexport class EditableText extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isEditing: false}\r\n        this.renderInput = this.renderInput.bind(this);\r\n        this.renderDisplay = this.renderDisplay.bind(this);\r\n        this.handleKeyUp = this.handleKeyUp.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n    }\r\n\r\n    renderInput() {\r\n        return(\r\n            <div onDoubleClick={this.toggleEdit}>\r\n                <input\r\n                type=\"text\"\r\n                value={this.props.text}\r\n                onChange={this.handleChange}\r\n                onKeyUp={this.handleKeyUp}\r\n                onBlur={this.props.toggleEdit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <div onDoubleClick={this.toggleEdit}>\r\n                {this.props.text}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toggleEdit() {\r\n        var newState = this.state.isEditing ? false : true;\r\n        this.setState({isEditing : newState});\r\n    }\r\n\r\n    handleKeyUp(e) {\r\n        if (e.key === 'Enter' || e.key === 'Escape') {\r\n            this.toggleEdit();\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.onChange(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isEditing) {\r\n            return this.renderInput();\r\n        }\r\n        else {\r\n            return this.renderDisplay();\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport class CardDisplayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.dragEnterHandler = this.dragEnterHandler.bind(this);\r\n        this.dragLeaveHandler = this.dragLeaveHandler.bind(this);\r\n    }\r\n\r\n    dragEnterHandler(e) {\r\n        console.log(\"Drag enter fired at \" + this.props.listId);\r\n        console.log(e.srcElement);\r\n    }\r\n\r\n    dragLeaveHandler(e) {\r\n        console.log(\"Drag exit fired at \" + this.props.listId);\r\n        console.log(e.srcElement);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div\r\n            onDrop={this.props.onDrop}\r\n            onDragOver={(e) => e.preventDefault()}\r\n            onDragEnter={this.dragEnterHandler}\r\n            onDragLeave={this.dragExitHandler}\r\n            >\r\n                <ol>\r\n                    {this.props.cards.map((card) => (\r\n                        <li key={card.props.id}>\r\n                            {card}\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n                <Button \r\n                    className=\"add-card-button\"\r\n                    variant=\"outline-primary\"\r\n                    size=\"sm\"\r\n                    onClick={this.props.onAdd}>\r\n\r\n                    Add a card\r\n                </Button> \r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../list/List.css';\r\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {EditableText} from '../EditableText';\r\n\r\nexport class Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: this.props.text || \"Card text\",\r\n            hoverListId: null\r\n        }\r\n        this.deleteCard = this.deleteCard.bind(this);\r\n        this.dragStartHandler = this.dragStartHandler.bind(this);\r\n        this.dragEndHandler = this.dragEndHandler.bind(this);\r\n        this.setText = this.setText.bind(this);\r\n        this.setHoverListId = this.setHoverListId.bind(this);\r\n    }\r\n\r\n    deleteCard() {\r\n        this.props.onDelete(this.props.id);\r\n    }\r\n\r\n    dragStartHandler(e) {\r\n        e.dataTransfer.setData('text', this.state.text);\r\n        e.dataTransfer.setData('setHoverListId', this.setHoverListId)\r\n    }\r\n\r\n    dragEndHandler(e) {\r\n        this.deleteCard();\r\n    }\r\n\r\n    setText(txt) {\r\n        this.setState({text: txt});\r\n    }\r\n\r\n    setHoverListId(listId) {\r\n        this.setState({hoverListId: listId})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div \r\n                className=\"card kanban-card\"\r\n                id={this.props.id}\r\n                draggable\r\n                onDragStart={this.dragStartHandler}\r\n                onDragEnd={this.dragEndHandler}\r\n                >\r\n                <div className=\"card-header\">\r\n                    <div className=\"close-button\">\r\n                        <FontAwesomeIcon \r\n                        icon={faTimesCircle}\r\n                        onClick={this.deleteCard}/>\r\n                    </div>\r\n                    <div className=\"card-body kanban-card-text\">\r\n                        <EditableText \r\n                        text={this.state.text}\r\n                        onChange={this.setText}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {CardDisplayer} from './CardDisplayer';\r\nimport {Card} from './Card';\r\n\r\n// This class stores all the cards in a list and allows for creating/deleting\r\nexport class CardController extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {nextId: 0};\r\n        this.addCard = this.addCard.bind(this);\r\n        this.deleteCard = this.deleteCard.bind(this);\r\n        this.dropHandler = this.dropHandler.bind(this);\r\n        this.getNextId = this.getNextId.bind(this);\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        var array = this.props.cards;\r\n        var index;\r\n        for (let i=0; i < array.length; i++) {\r\n            let currCard = array[i];\r\n            if (currCard.props.id === cardId) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        array.splice(index, 1);\r\n        this.props.setCards(array);\r\n    }\r\n\r\n    addCard() {\r\n        let array = this.props.cards;\r\n        array.push(\r\n            <Card \r\n                id={this.props.listId + \"_\" + this.getNextId()}\r\n                listid={this.props.listId}\r\n                onDelete={this.deleteCard}\r\n            />\r\n        );\r\n        this.props.setCards(array);\r\n    }\r\n\r\n    getNextId() {\r\n        var id = this.state.nextId;\r\n        this.setState({nextId: id + 1});\r\n        return id;\r\n    }\r\n    // Add dropped card and delete from previous list\r\n    // TODO: Rework addCard to allow for passing card text\r\n    dropHandler(e) {\r\n        let text = e.dataTransfer.getData(\"text\");\r\n        let array = this.props.cards;\r\n        array.push(\r\n            <Card \r\n                id={this.props.listId + \"_\" + this.getNextId()}\r\n                onDelete={this.deleteCard}\r\n                text = {text}\r\n            />\r\n        );\r\n        this.props.setCards(array);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CardDisplayer\r\n                onAdd={this.addCard}\r\n                cards={this.props.cards}\r\n                onDrop={this.dropHandler}\r\n                listId={this.props.listId}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {EditableText} from '../EditableText';\r\nimport './List.css';\r\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {CardController} from '../card/CardController';\r\n\r\nexport class List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"List Title\",\r\n            cards: []\r\n        };\r\n        this.delete = this.delete.bind(this);\r\n        this.setText = this.setText.bind(this);\r\n        this.setCards = this.setCards.bind(this);\r\n    }\r\n    \r\n    delete() {\r\n        this.props.onDelete(this.props.id);\r\n    }\r\n\r\n    setText(txt) {\r\n        this.setState({text: txt});\r\n    }\r\n\r\n    setCards(cardsArray) {\r\n        this.setState({cards: cardsArray})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card list\"\r\n            id={this.props.id}\r\n            >\r\n                <div className=\"card-header\">\r\n                    <div className=\"close-button\">\r\n                        <FontAwesomeIcon \r\n                            icon={faTimesCircle}\r\n                            onClick={this.delete}/>\r\n                    </div>\r\n                    <EditableText\r\n                    text={this.state.text}\r\n                    onChange={this.setText}\r\n                    />\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <CardController listId={this.props.id} setCards={this.setCards} cards={this.state.cards}/>\r\n                </div>\r\n            </div>  \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './List.css';\r\nimport { ListDisplayer } from './ListDisplayer';\r\nimport {List} from './List';\r\n\r\nexport class ListController extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lists: [],\r\n            nextId: 0\r\n        };\r\n        this.addList = this.addList.bind(this);\r\n        this.deleteList = this.deleteList.bind(this);\r\n        this.getNextId = this.getNextId.bind(this);\r\n    }\r\n\r\n    addList() {\r\n        let list = <List \r\n            id={\"list_\" + this.getNextId()}\r\n            onDelete={this.deleteList}\r\n        />\r\n        \r\n        var array = this.state.lists;\r\n        array.push(list);\r\n        this.setState({lists: array});\r\n    }\r\n\r\n    getNextId() {\r\n        var id = this.state.nextId;\r\n        this.setState({nextId: id + 1})\r\n        return id;\r\n    }\r\n\r\n    deleteList(listId) {\r\n        var index;\r\n        var array = this.state.lists;\r\n\r\n        // Find the index of the list to be deleted\r\n        for (let i=0; i < this.state.lists.length; i++) {\r\n            let currList = this.state.lists[i];\r\n            if (currList.props.id === listId) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        array.splice(index, 1);\r\n        this.setState({lists: array});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <ListDisplayer \r\n                    lists={this.state.lists}\r\n                    onDelete={this.deleteList}\r\n                    onAdd={this.addList}\r\n                />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {ListController} from './list/ListController';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ListController/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}